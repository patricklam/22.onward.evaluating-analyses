https://ieeexplore.ieee.org/document/7194557
https://dl.acm.org/doi/10.1145/2983574
https://www.sigplan.org/Resources/EmpiricalEvaluation/

PLATEAU workshop

Shane Markstrum. Staking Claims: A History of Programming Language Design Claims and Evidence. PLATEAU 2010.

meh, says that claims of goodness of new PLs are usually unexplored. So what? If the language as a whole is good, it'll get adopted more, right?

Christine A. Halverson and Jeffrey Carver. Climbing the Plateau: Getting from Study Design to Data that Means Something. PLATEAU 2009.

evaluating programmer productivity on a proposed language. Talks about how to actually do the study. Preliminary results.

bug finding:
pmd
findbugs
bugs as deviant behavior
tricorder

interdisciplinary programming language design
https://dl.acm.org/doi/10.1145/3276954.3276965

aec
http://artifact-eval.org/guidelines.html
http://evaluate.inf.usi.ch/artifacts

rejected refactorings:
https://mdipenta.github.io/files/tosem-rejected-refact-2022.pdf

To quote Peter Naur [33]:
It is curious to observe how the authors in this field, who in
the formal aspects of their work require painstaking
demonstration and proof, in the informal aspects are satisfied
with subjective claims that have not the slightest support,
neither in argument nor in verifiable evidence. Surely
common sense will indicate that such a manner is
scientifically unacceptable.

Naur, P. (1992). The place of strictly defined notation in human
insight. In Computing: A Human Activity, ACM Press
