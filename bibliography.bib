
@inproceedings{hovemeyer04:_findin_bugs_easy,
author = {Hovemeyer, David and Pugh, William},
title = {Finding Bugs is Easy},
year = 2004,
isbn = 1581138334,
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1028664.1028717},
doi = {10.1145/1028664.1028717},
abstract = {Many techniques have been developed over the years to automatically find bugs in software. Often, these techniques rely on formal methods and sophisticated program analysis. While these techniques are valuable, they can be difficult to apply, and they aren't always effective in finding real bugs.Bug patterns are code idioms that are often errors. We have implemented automatic detectors for a variety of bug patterns found in Java programs. In this extended abstract1, we describe how we have used bug pattern detectors to find serious bugs in several widely used Java applications and libraries. We have found that the effort required to implement a bug pattern detector tends to be low, and that even extremely simple detectors find bugs in real applications.From our experience applying bug pattern detectors to real programs, we have drawn several interesting conclusions. First, we have found that even well tested code written by experts contains a surprising number of obvious bugs. Second, Java (and similar languages) have many language features and APIs which are prone to misuse. Finally, that simple automatic techniques can be effective at countering the impact of both ordinary mistakes and misunderstood language features.},
booktitle = {Companion to the 19th Annual ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages, and Applications},
pages = {132–136},
numpages = 5,
keywords = {bugs, bug patterns, static analysis, bug checkers},
location = {Vancouver, BC, CANADA},
series = {OOPSLA '04}
}

@InProceedings{coblenz18:_inter_progr_languag_desig,
  author =       {Michael Coblenz and Jonathan Aldrich and Brad A. Myers and Joshua Sunshine},
  title =        {Interdisciplinary Programming Language Design},
  booktitle = {Proceedings of the 2018 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software (Onward! '18)},
  year =      2018,
  month =     {November},
  address =   {Boston, MA, USA}}

@InProceedings{markstrum10:_stakin_claim,
  author =       {Shane Markstrum},
  title =        {Staking Claims: A History of Programming Language Design Claims and Evidence},
  booktitle = {PLATEAU},
  year =      2010}



@InProceedings{halverson09:_climb_plateau,
  author =       {Christine A. Halverson and Jeffrey Carver},
  title =        {Climbing the Plateau: Getting from Study Design to Data that Means Something},
  booktitle = {PLATEAU},
  year =      2009}

@Article{coblenz20:_can_advan_type_system_be_usabl,
  author =       {Michael Coblenz and Joshua Sunshine and Jonathan Aldrich and Brad A. Myers},
  title =        {Can Advanced Type Systems Be Usable? An Empirical Study of Ownership, Assets, and Typestate in Obsidian},
  journal =      {PACMPL},
  year =         2020,
  volume =    {OOPSLA},
  month =     {November}}

@article{allison2018reproducibility,
  title={Reproducibility of research: Issues and proposed remedies},
  author={Allison, David B and Shiffrin, Richard M and Stodden, Victoria},
  journal={Proceedings of the National Academy of Sciences},
  volume={115},
  number={11},
  pages={2561--2562},
  year={2018},
  publisher={National Acad Sciences}
}



@Misc{krishnamurthi:_about_artif_evaluat,
  author =    {Shriram Krishnamurthi},
  title =     {About Artifact Evaluation},
  year =      {2014},
  howpublished = {\url{https://artifact-eval.org/about.html}},
  note =      {Accessed 6 July 2022}}

@inproceedings{bajpai2017challenges,
  title={Challenges with reproducibility},
  author={Bajpai, Vaibhav and K{\"u}hlewind, Mirja and Ott, J{\"o}rg and Sch{\"o}nw{\"a}lder, J{\"u}rgen and Sperotto, Anna and Trammell, Brian},
  booktitle={Proceedings of the Reproducibility Workshop},
  pages={1--4},
  year={2017}
}

@Article{collberg16:_repeat_comput_system_resear,
  author =       {Christian S. Collberg and Todd A. Proebsting},
  title =        {Repeatability in Computer Systems Research},
  journal =      {Communications of the ACM},
  year =         2016,
  volume =    59,
  number =    3,
  pages =     {62--69}}

@inproceedings{guo2011cde,
author = {Guo, Philip J.},
title = {{CDE}: Run Any {Linux} Application on-Demand without Installation},
year = {2011},
publisher = {USENIX Association},
address = {USA},
booktitle = {Proceedings of the 25th International Conference on Large Installation System Administration},
pages = {2},
numpages = {1},
location = {Boston, MA},
series = {LISA'11}
}


@article{boettiger2015introduction,
  title={An introduction to {Docker} for reproducible research},
  author={Boettiger, Carl},
  journal={{ACM} {SIGOPS} Operating Systems Review},
  volume={49},
  number={1},
  pages={71--79},
  year={2015},
  publisher={{ACM} New York, NY, USA}
}

@online{Berger_Reproducing,
    author = {Emery D. Berger and Celeste Hollenbeck and Petr Maj and Olga Vitek and Jan Vitek},
    title = {Reproducing ``{A} Large-Scale Study of Programming Languages and Code Quality in {GitHub}: A Reproducibility Study''},
    url  = {https://nextjournal.com/PRL-PRG/toplas-analysis/},
    note = {\url{https://nextjournal.com/PRL-PRG/toplas-analysis/} Accessed 11 Sept. 2021},
    addendum = {(accessed 11 Sept. 2021)},
    year = 2019,
    keywords = {Reproducibility-Study, Reproducibility Study}
}

@inproceedings{ray2014large,
  title={A large scale study of programming languages and code quality in {GitHub}},
  author={Ray, Baishakhi and Posnett, Daryl and Filkov, Vladimir and Devanbu, Premkumar},
  booktitle={Proceedings of the 22nd {ACM} {SIGSOFT} International Symposium on Foundations of Software Engineering},
  pages={155--165},
  year={2014}
}

@online{SPECjvm98,
    author = {{Standard Performance Evaluation Corporation}},
    title = {{SPECjvm98} Documentation},
    url  = {https://www.spec.org/jvm98/jvm98/doc/},
    note = {Online version at \url{https://www.spec.org/jvm98/jvm98/doc/}},
    year = {1998},
    month = aug
}

@online{SPECjvm2008,
    author = {{Standard Performance Evaluation Corporation}},
    title = {{SPECjvm2008}},
    url  = "http://www.spec.org/jvm2008/",
    note   = {Online version at \url{http://www.spec.org/jvm2008/}},
    year = 2008
}

@inproceedings{DaCapo_inproceedings,
    author = {Blackburn, Stephen M. and Garner, Robin and Hoffmann, Chris and Khang, Asjad M. and McKinley, Kathryn S. and Bentzur, Rotem and Diwan, Amer and Feinberg, Daniel and Frampton, Daniel and Guyer, Samuel Z. and Hirzel, Martin and Hosking, Antony and Jump, Maria and Lee, Han and Moss, J. Eliot B. and Phansalkar, Aashish and Stefanovi\'{c}, Darko and VanDrunen, Thomas and von Dincklage, Daniel and Wiedermann, Ben},
    title = {The {DaCapo} Benchmarks: {Java} Benchmarking Development and Analysis},
    year = {2006},
    isbn = {1595933484},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/1167473.1167488},
    doi = {10.1145/1167473.1167488},
    booktitle = {Proceedings of the 21st Annual {ACM} {SIGPLAN} Conference on Object-Oriented Programming Systems, Languages, and Applications},
    pages = {169–190},
    numpages = {22},
    keywords = {DaCapo, benchmark, Java, methodology, SPEC},
    location = {Portland, Oregon, USA}, series = {OOPSLA '06}
}

@INPROCEEDINGS{QualitasCorpus,  
    author={Tempero, Ewan and Anslow, Craig and Dietrich, Jens and Han, Ted and Li, Jing and Lumpe, Markus and Melton, Hayden and Noble, James},
    booktitle={2010 Asia Pacific Software Engineering Conference},
    title={The {Qualitas} Corpus: A Curated Collection of {Java} Code for Empirical Studies},
    year=2010,
    pages={336-345},
    doi={10.1109/APSEC.2010.46}
}

@article{XCorpus,
  author = {Dietrich, Jens and Schole, Henrik and Sui, Li and Tempero, Ewan},
  title = {{XCorpus} – An executable Corpus of {Java} Programs},
  journal = {Journal of Object Technology},
  volume = {16},
  number = {4},
  issn = {1660-1769},
  year = {2017},
  month = aug,
  pages = {1:1-24},
  doi = {10.5381/jot.2017.16.4.a1}
}

@article{blackburn16:_truth_whole_truth_nothin_but_truth,
author = {Blackburn, Stephen M. and Diwan, Amer and Hauswirth, Matthias and Sweeney, Peter F. and Amaral, Jos\'{e} Nelson and Brecht, Tim and Bulej, Lubom\'{\i}r and Click, Cliff and Eeckhout, Lieven and Fischmeister, Sebastian and Frampton, Daniel and Hendren, Laurie J. and Hind, Michael and Hosking, Antony L. and Jones, Richard E. and Kalibera, Tomas and Keynes, Nathan and Nystrom, Nathaniel and Zeller, Andreas},
title = {The Truth, The Whole Truth, and Nothing But the Truth: A Pragmatic Guide to Assessing Empirical Evaluations},
year = 2016,
issue_date = {October 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = 38,
number = 4,
issn = {0164-0925},
url = {https://doi.org/10.1145/2983574},
doi = {10.1145/2983574},
journal = {{ACM} Trans. Program. Lang. Syst.},
month = oct,
articleno = 15,
numpages = 20,
keywords = {observation study, Experimental evaluation, experimentation}
}

@Article{baltesar:_sampl_softw_engin_resear,
  author =       {Sebastian Baltes and Paul Ralph},
  title =        {Sampling in Software Engineering Research: A Critical Review and Guidelines},
  journal =      {Empirical Software Engineering},
  year =         {to appear}}


@Article{merino18:_system_liter_review_softw_visual_evaluat,
  author =       {Leonel Merino and Mohammad Ghafari and Craig Anslow and Oscar Nierstrasz},
  title =        {A Systematic Literature Review of Software Visualization Evaluation},
  journal =      {Journal of Systems and Software},
  year =         2018}

@article{sadowski18:_lesson_build_static_analy_tools_googl,
author = {Sadowski, Caitlin and Aftandilian, Edward and Eagle, Alex and Miller-Cushon, Liam and Jaspan, Ciera},
title = {Lessons from Building Static Analysis Tools at Google},
year = 2018,
issue_date = {April 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = 61,
number = 4,
issn = {0001-0782},
url = {https://doi.org/10.1145/3188720},
doi = {10.1145/3188720},
abstract = {For a static analysis project to succeed, developers must feel they benefit from and enjoy using it.},
journal = {Commun. ACM},
month = {mar},
pages = {58–66},
numpages = 9
}

@InProceedings{estrada06:_empir_evaluat_framew_model_based,
author="Estrada, Hugo
and Rebollar, Alicia Mart{\'i}nez
and Pastor, Oscar
and Mylopoulos, John",
editor="Dubois, Eric
and Pohl, Klaus",
title="An Empirical Evaluation of the i* Framework in a Model-Based Software Generation Environment",
booktitle="Advanced Information Systems Engineering",
year=2006,
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="513--527",
isbn="978-3-540-34653-1"
}

@inproceedings{laugwitz08:_const,
  title={Construction and evaluation of a user experience questionnaire},
  author={Laugwitz, Bettina and Held, Theo and Schrepp, Martin},
  booktitle={Symposium of the Austrian HCI and usability engineering group},
  pages={63--76},
  year=2008,
  organization={Springer}
}

@online{minnesota_banned,
    author = {Monica Chin},
    title = {How a university got itself banned from the {Linux} kernel --- The {University} of {Minnesota}’s path to banishment was long, turbulent, and full of emotion},
    year = {2021},
    url  = {https://www.theverge.com/2021/4/30/22410164/linux-kernel-university-of-minnesota-banned-open-source},
    note = {\url{https://www.theverge.com/2021/4/30/22410164/linux-kernel-university-of-minnesota-banned-open-source} Accessed 12 Sept. 2021},
    addendum = {(accessed 12 Sept. 2021)}
}


@Misc{berger19:_check_manif_empir_evaluat,
  author =    {Emery D. Berger and Stephen M. Blackburn and Matthias Hauswirth and Michael W. Hicks},
  title =     {A Checklist Manifesto for Empirical Evaluation: A Preemptive Strike Against a Replication Crisis in Computer Science},
  howpublished = {SIGPLAN PL Perspectives. \url{https://blog.sigplan.org/2019/08/28/a-checklist-manifesto-for-empirical-evaluation-a-preemptive-strike-against-a-replication-crisis-in-computer-science/}},
  month =     {Aug},
  year =      2019}

@Book{gawande09:_check_manif,
  author =    {Atul Gawande},
  title =        {The Checklist Manifesto: How to Get Things Right},
  publisher =    {Metropolitan Books},
  year =         2009}

@InProceedings{beckman11:_empir_study_objec_protoc_wild,
  author =       {Nels E. Beckman and Duri Kim and Jonathan Aldrich},
  title =        {An Empirical Study of Object Protocols in the Wild},
  booktitle =    {ECOOP},
  year =         2011}

@InProceedings{anslow13:_sourc,
  author =       {Craig Anslow and Stuart Marshall and James Noble and Robert Biddle},
  title =        {{SourceVis}: Collaborative Software Visualization for Co-Located Environments},
  booktitle = {Proceedings of the IEEE International Working Conference on Software Visualization (VISSOFT)},
  year =      2013,
  address =   {Eindhoven, The Netherlands}}


@inproceedings{durieux21,
  author    = {Thomas Durieux and
C{\'{e}}sar Soto{-}Valero and
Benoit Baudry},
title     = {{DUETS:} {A} Dataset of Reproducible Pairs of Java Library-Clients},
year      = {2021},
        Comment = {<b>Data showcase award</b>},
        booktitle={MSR},
        KEYWORDS = {Java,diversity,award},
        X-International-Audience = {yes},
        X-Language = {EN},
        x-abbrv = {MSR} 
}
